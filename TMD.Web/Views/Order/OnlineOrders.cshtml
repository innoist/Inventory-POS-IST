@model TMD.Web.ViewModels.OrderViewModel
@{
    ViewBag.Title = "Orders";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    Session["MenuKey"] = 20;

}
<header>
    <h3 class="page-title">
        Orders <small id="Summary">Summary</small>
    </h3>
</header>
<div class="container-fluid">
    <form class="form-horizontal">
        <div class="row-fluid">
            <div class="span12">
                <div class="">
                    <div class="tools">
                        @*<a href="~/Order/Create" class="btn red titleButton">Create New Order</a>*@
                        <input type="button" class="btn blue titleButton" id="btnResetFltr" style="float:right" value="Reset">
                        <input type="button" class="btn green" id="btnFltr" style="float: right" value="Filter"/>
                        <br/><br/>
                    </div>
                </div>
                <div class="portlet-body form">
                    <div class="form-actions">
                        <div>
                            <table class="responsive">
                                <tr>
                                    <td class="col-md-1">
                                        <label class="control-label"> Order Id </label>
                                    </td>
                                    <td class="col-md-2">
                                        <div class="input-icon">
                                            <i class="fa fa-search"></i>
                                            @*<input type="text" class="searchInputs form-control" value="" name="Title" id="Title" />*@
                                            @Html.TextBox("OrderId", @Model.SearchRequest.OrderId, new { @class = "searchInputs form-control", @id = "OrderId", @placeholder = "Search OrderId" })
                                        </div>
                                    </td>
                                    <td class="col-md-1">
                                        <label class="control-label"> Order Date </label>
                                    </td>
                                    <td class="col-md-2">
                                        <div class="input-icon">
                                            <i class="fa fa-search"></i>
                                            @*<input type="text" class="searchInputs form-control" value="" name="Title" id="Title" />*@
                                            @Html.TextBox("OrderDate", @Model.SearchRequest.OrderDate, new { @class = "searchInputs form-control", @id = "OrderDate", @placeholder = "Search Order Date" })
                                        </div>
                                    </td>
                                    <td class="col-md-1">
                                        <label class="control-label"> Product Code</label>
                                    </td>
                                    <td class="col-md-2">
                                        <div class="input-icon">
                                            <i class="fa fa-search"></i>
                                            @*<input type="text" class="searchInputs form-control" value="" name="Title" id="Title" />*@
                                            @Html.TextBox("ProductCode", @Model.SearchRequest.ProductCode, new { @class = "searchInputs form-control", @id = "ProductCode", @placeholder = "Search Product Code" })
                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="col-md-1">
                                        <label class="control-label">Order Status</label>
                                    </td>
                                    <td class="col-md-2">
                                        <div class="input-icon">
                                            <i class="fa fa-search"></i>
                                            @Html.DropDownListFor(x => x.SearchRequest.IsOnline, new List<SelectListItem>
                                            {
                                                                new SelectListItem() {Text = "Close", Value="0"},
                                                                new SelectListItem() {Text = "Open", Value="1"}
                                            }, new { @class = "form-control input-circle mandatory", @id = "OrderStatus" })
                                        </div>
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
                </div>
                <div class="portlet box blue">
                    <table id="dataTable" class="display" cellspacing="0" width="100%">
                        <thead>
                            <tr>
                                <th></th>
                                <th class="tableHeaderWhite">Order Id</th>
                                <th class="tableHeaderWhite">Date</th>
                                <th class="tableLeftAlignHeader tableHeaderWhite">Customer Name</th>
                                <th class="tableLeftAlignHeader tableHeaderWhite">Customer Phone</th>
                                <th class="tableLeftAlignHeader tableHeaderWhite">Email</th>
                                <th class="textAlignRight tableHeaderWhite">Sale</th>
                                <th class="textAlignRight tableHeaderWhite">Discount</th>
                                <th class="textAlignRight tableHeaderWhite">Net Sale</th>
                                <th class="textAlignRight tableHeaderWhite">Total Items</th>
                                <th class="tableLeftAlignHeader tableHeaderWhite">Created By</th>
                                <th class="tableLeftAlignHeader tableHeaderWhite">Print</th>
                                @if (User.IsInRole("Admin"))
                                {
                                    <th></th>
                                }
                            </tr>
                        </thead>
                    </table>

                </div>
            </div>
        </div>
    </form>
</div>
<script type="text/javascript">
    //"fnDrawCallback": fnLoadComplete,
    jQuery(document).ready(function ($) {
        var isAdmin = '@User.IsInRole("Admin")';
        $("#OrderDate").datepicker({
            changeMonth: true,
            changeYear: true,
            maxDate: new Date()
        });
        $("#OrderDate").datepicker().datepicker("setDate", new Date());


        //, "class": "textAlignRight"
        var siteURL = $('#siteURL').val();
        var start = ('@Model.SearchRequest.PageNo' - 1) * '@Model.SearchRequest.PageSize';
        var isAsc = '@Model.SearchRequest.IsAsc' == "True" || '@Model.SearchRequest.IsAsc' == "true";
        var sortBy = ['@Model.SearchRequest.SortBy', isAsc ? 'asc' : 'desc'];


        var columns = [
            { "data": "OrderIdValue" },
            { "data": "OrderId" },
            { "data": "RecCreatedDate" },
            { "data": "CustomerName" },
            { "data": "CustomerPhone" },
            { "data": "CustomerEmail" },
            { "data": "TotalSale", "class": "textAlignRight" },
            { "data": "TotalDiscount", "class": "textAlignRight" },
            { "data": "NetSales", "class": "textAlignRight" },
            { "data": "TotalItems", "class": "textAlignRight" },
            { "data": "RecCreatedBy" },
            { "data": "PrintString" }
        ];
        if (isAdmin == "True") {
            columns.push({
                "orderable": false,
                "data": null,
                "defaultContent": "<a class='delete' title='Delete' style='text-decoration: none;font-weight: bold;'  href='javascript:;'>X</a>",
                "class": "textAlignCenter"
            });
        }

        var oTable = $('#dataTable').dataTable({
            "iDisplayLength": 11,
            "displayStart": start || 0,
            "bFilter": false,
            "bLengthChange": false,
            "aaSorting": [sortBy],
            "aoColumnDefs": [
                { 'bSortable': false, 'aTargets': [0, 2, 3, 4, 5, 6, 7, 8] },
                {
                    "targets": [0],
                    "visible": false,
                    "searchable": false
                }
            ],
            "columns": columns,
            "processing": true,
            "serverSide": true,

            "ajax": {
                url: siteURL + "Order/Index",
                type: "POST",
                dataType: "json",
                data: function (params) {
                    params.PageNo = Math.ceil(params.start / params.length) + 1;
                    if (params.PageNo === 0) {
                        params.PageNo = 1;
                    }
                    params.PageSize = params.length;
                    params.SortBy = params.order[0].column;
                    params.IsAsc = params.order[0].dir === "asc";

                    params.OrderId = $('#OrderId').val();
                    params.OrderDate = $('#OrderDate').val();
                    params.ProductCode = $('#ProductCode').val();
                    params.IsOnline = 1;
                    params.IsOpen = $('#OrderStatus').val();
                },
                complete: Completed
            }
        });
        $('#btnFltr').on('click', function (e) {
            oTable.fnDraw();
        });

        $('#btnResetFltr').on('click', function (e) {
            $('#OrderId').val("");
            $('#OrderDate').val("");
            $('#ProductCode').val("");
            $('#OrderStatus').val("");
            $("#OrderDate").datepicker().datepicker("setDate", new Date());

            // $('#QS').val("");
            oTable.fnFilter('');
        });
        $('#dataTable').on('click', '.delete', function (e) {
            e.preventDefault();

            if (confirm("Are you sure to delete this Order ?") == false) {
                return;
            }

            var nRow = $(this).parents('tr')[0];
            var aData = oTable.fnGetData(nRow);
            var serviceUrl = siteURL + 'Order/Delete';
            $.ajax({
                type: "POST",
                url: serviceUrl,
                data: "{ id:" + aData.OrderIdValue + "}",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                complete: function (data) {
                    if (data.responseJSON.status === 200) {
                        successFunc(data);
                    } else {
                        errorFunc(data);
                    }
                }
            });

            function successFunc(data) {

                var totalRcd = oTable.fnSettings().fnRecordsTotal() - 1, //as success deleted one row
                    displayStart = oTable.fnSettings()._iDisplayStart,
                    displayLength = oTable.fnSettings()._iDisplayLength;

                oTable.fnDeleteRow(nRow, null, false);
                var page = Math.ceil(displayStart / displayLength);

                if (totalRcd <= displayStart) {
                    oTable.fnPageChange(page - 1);
                } else {
                    oTable.fnPageChange(page);
                }

                toastr.success(data.responseJSON.response);
            }

            function errorFunc(error) {
                toastr.error(error.responseJSON.response);
            }
        }); //end delete
    });

    function Completed(data, e, a) {

        ///   alert(data.responseJSON.GrossSale);
        $('#Summary').prop('title', data.responseJSON.GrossSale + "," + data.responseJSON.Discount + "," + data.responseJSON.NetSale);
    }

</script>